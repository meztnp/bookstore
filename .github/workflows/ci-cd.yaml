name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger this pipeline when pushing to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests targeting the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from GitHub
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (or Azure ACR)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build & Push the Stack Image
      - name: Build & Push Stack Image
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

  deploy-to-aks:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code again to get Kubernetes configuration
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Log in to Azure using Service Principal credentials
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # GitHub secret with Azure service principal credentials

      # Step 3: Set up Kubernetes context for AKS
      - name: Set Kubernetes Context
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_CLUSTER_NAME }}

      # Step 4: Apply Kubernetes Deployment YAML files
      - name: Apply Kubernetes Configurations
        run: |
          kubectl apply -f kubernetes/postgres-deployment.yml
          kubectl apply -f kubernetes/user-service-deployment.yml
          kubectl apply -f kubernetes/order-service-deployment.yml
          kubectl apply -f kubernetes/frontend-deployment.yml

      # Step 5: Verify Deployment (Check Pod Status)
      - name: Verify Deployment
        run: |
          kubectl get pods
